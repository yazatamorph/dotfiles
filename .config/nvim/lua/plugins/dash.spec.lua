return {
	{
		"goolord/alpha-nvim",
		dependencies = {
			"echasnovski/mini.icons",
			"nvim-lua/plenary.nvim",
		},
		config = function()
			local theta = require("alpha.themes.theta")
			local dashboard = require("alpha.themes.dashboard")

			local headers = {
				{
					[[____________________________________________________________________________________        ]],
					[[ ___________________________________________________________/\\\_____________________       ]],
					[[  __/\\/\\\\\\_______/\\\\\\\\______/\\\\\_____/\\\____/\\\_\///___/\\/\\\\__/\\\\\___      ]],
					[[   _\/\\\////\\\____/\\\/////\\\___/\\\///\\\__\//\\\__/\\\___/\\\_\/\\\///\\\\\///\\\_     ]],
					[[    _\/\\\__\//\\\__/\\\\\\\\\\\___/\\\__\//\\\__\//\\\/\\\___\/\\\_\/\\\_\//\\\__\/\\\_    ]],
					[[     _\/\\\___\/\\\_\//\\///////___\//\\\__/\\\____\//\\\\\____\/\\\_\/\\\__\/\\\__\/\\\_   ]],
					[[      _\/\\\___\/\\\__\//\\\\\\\\\\__\///\\\\\/______\//\\\_____\/\\\_\/\\\__\/\\\__\/\\\_  ]],
					[[       _\///____\///____\//////////_____\/////_________\///______\///__\///___\///___\///__ ]],
					[[        ____________________________________________________________________________________]],
				},
				{
					[[                                                                               ]],
					[[░▒▓███████▓▒░░▒▓████████▓▒░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓██████████████▓▒░  ]],
					[[░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░ ]],
					[[░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░ ]],
					[[░▒▓█▓▒░░▒▓█▓▒░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░ ]],
					[[░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▓█▓▒░ ░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░ ]],
					[[░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▓█▓▒░ ░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░ ]],
					[[░▒▓█▓▒░░▒▓█▓▒░▒▓████████▓▒░▒▓██████▓▒░   ░▒▓██▓▒░  ░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░ ]],
					[[                                                                               ]],
				},
				{
					[[         _             _            _      _          _        _         _   _       ]],
					[[        /\ \     _    /\ \         /\ \   /\ \    _ / /\      /\ \      /\_\/\_\ _   ]],
					[[       /  \ \   /\_\ /  \ \       /  \ \  \ \ \  /_/ / /      \ \ \    / / / / //\_\ ]],
					[[      / /\ \ \_/ / // /\ \ \     / /\ \ \  \ \ \ \___\/       /\ \_\  /\ \/ \ \/ / / ]],
					[[     / / /\ \___/ // / /\ \_\   / / /\ \ \ / / /  \ \ \      / /\/_/ /  \____\__/ /  ]],
					[[    / / /  \/____// /_/_ \/_/  / / /  \ \_\\ \ \   \_\ \    / / /   / /\/________/   ]],
					[[   / / /    / / // /____/\    / / /   / / / \ \ \  / / /   / / /   / / /\/_// / /    ]],
					[[  / / /    / / // /\____\/   / / /   / / /   \ \ \/ / /   / / /   / / /    / / /     ]],
					[[ / / /    / / // / /______  / / /___/ / /     \ \ \/ /___/ / /__ / / /    / / /      ]],
					[[/ / /    / / // / /_______\/ / /____\/ /       \ \  //\__\/_/___\\/_/    / / /       ]],
					[[\/_/     \/_/ \/__________/\/_________/         \_\/ \/_________/        \/_/        ]],
					[[                                                                                     ]],
				},
				{
					[[                                                            ]],
					[[░   ░░░  ░░        ░░░      ░░░  ░░░░  ░░        ░░  ░░░░  ░]],
					[[▒    ▒▒  ▒▒  ▒▒▒▒▒▒▒▒  ▒▒▒▒  ▒▒  ▒▒▒▒  ▒▒▒▒▒  ▒▒▒▒▒   ▒▒   ▒]],
					[[▓  ▓  ▓  ▓▓      ▓▓▓▓  ▓▓▓▓  ▓▓▓  ▓▓  ▓▓▓▓▓▓  ▓▓▓▓▓        ▓]],
					[[█  ██    ██  ████████  ████  ████    ███████  █████  █  █  █]],
					[[█  ███   ██        ███      ██████  █████        ██  ████  █]],
					[[                                                            ]],
				},
				{
					[[     _________________________________________________/\/\___________________]],
					[[    _/\/\/\/\______/\/\/\______/\/\/\____/\/\__/\/\__________/\/\/\__/\/\___ ]],
					[[   _/\/\__/\/\__/\/\/\/\/\__/\/\__/\/\__/\/\__/\/\__/\/\____/\/\/\/\/\/\/\_  ]],
					[[  _/\/\__/\/\__/\/\________/\/\__/\/\____/\/\/\____/\/\____/\/\__/\__/\/\_   ]],
					[[ _/\/\__/\/\____/\/\/\/\____/\/\/\________/\______/\/\/\__/\/\______/\/\_    ]],
					[[________________________________________________________________________     ]],
				},
			}

			math.randomseed(os.time())
			local random_header = function()
				return headers[math.random(#headers)]
			end

			local info_line = function()
				local plugins = #vim.tbl_keys(require("lazy").plugins())
				local v = vim.version()
				local datetime = os.date(" %Y-%m-%d   %H:%M")
				local nvim_version = " v" .. v.major .. "." .. v.minor .. "." .. v.patch
				return string.format("%s   %d  %s", nvim_version, plugins, datetime)
			end

			theta.header = {
				type = "text",
				val = random_header(),
				opts = {
					position = "center",
					hl = "type",
				},
			}

			theta.config.layout = {
				{ type = "padding", val = 2 },
				theta.header,
				{ type = "padding", val = 1 },
				{
					type = "text",
					val = info_line(),
					opts = { hl = "Question", position = "center" },
				},
				{ type = "padding", val = 1 },
				{
					type = "group",
					val = {
						dashboard.button("e", "  New file", "<cmd>ene|startinsert<CR>"),
						dashboard.button("c", "  NeoVim Configuration", "<cmd>cd ~/.config/nvim|Neotree reveal<CR>"),
						dashboard.button("u", "  Lazy Update", "<cmd>Lazy sync<CR>"),
						dashboard.button("q", "󰅚  Quit", "<cmd>qa<CR>"),
					},
					position = "center",
				},
				{ type = "padding", val = 1 },
				{
					type = "group",
					val = {
						{
							type = "text",
							val = "Recent Files",
							opts = {
								hl = "SpecialComment",
								shrink_margin = false,
								position = "center",
							},
						},
						{ type = "padding", val = 1 },
						{
							type = "group",
							val = function()
								return { theta.mru(0, vim.fn.getcwd()) }
							end,
							opts = { shrink_margin = false },
						},
					},
					position = "center",
				},
			}

			require("alpha").setup(theta.config)
		end,
	},
}
